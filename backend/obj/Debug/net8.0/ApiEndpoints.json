[
  {
    "ContainingType": "backend.Controllers.ProjectController",
    "Method": "UpdateProjectAsync",
    "RelativePath": "api/Project",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "project",
        "Type": "backend.Models.DTOs.ProjectDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "backend.Models.Project",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.ProjectController",
    "Method": "UploadVideosAsync",
    "RelativePath": "api/Project/{courseName}/videos",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "courseName",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "files",
        "Type": "Microsoft.AspNetCore.Http.IFormFileCollection",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.ProjectController",
    "Method": "CreateProjectAsync",
    "RelativePath": "api/Project/{createProject}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "project",
        "Type": "backend.Models.DTOs.ProjectDTO",
        "IsRequired": true
      },
      {
        "Name": "createProject",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "backend.Models.Project",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.ProjectController",
    "Method": "GetProjectByIdAsync",
    "RelativePath": "api/Project/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "backend.Models.Project",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.ProjectController",
    "Method": "DeleteProjectAsync",
    "RelativePath": "api/Project/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "backend.Models.Project",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.ProjectController",
    "Method": "UploadThumbnailAsync",
    "RelativePath": "api/Project/thumbnail",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "courseName",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "file",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.UserController",
    "Method": "UpdateUserAsync",
    "RelativePath": "api/User",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "user",
        "Type": "backend.Models.DTOs.UserDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "backend.Models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.UserController",
    "Method": "GetUserByIdAsync",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "backend.Models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.UserController",
    "Method": "DeleteUserAsync",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "backend.Models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.UserController",
    "Method": "CreateUserAsync",
    "RelativePath": "createUser",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "user",
        "Type": "backend.Models.DTOs.UserDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "backend.Models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]